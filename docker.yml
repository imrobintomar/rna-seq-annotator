version: '3.8'

services:
  rna-seq-annotator:
    build:
      context: .
      dockerfile: Dockerfile
    image: rna-seq-annotator:latest
    container_name: rna-seq-annotator
    volumes:
      - ./data:/app/data
      - ./ontologies:/app/ontologies
      - ./output:/app/output
      - ./logs:/app/logs
    environment:
      - PYTHONUNBUFFERED=1
      - LOG_LEVEL=INFO
      - MAX_WORKERS=4
      - ONTOLOGY_DIR=/app/ontologies
      - OUTPUT_DIR=/app/output
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import sys; sys.exit(0)"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G
        reservations:
          cpus: '1'
          memory: 2G

  mongodb:
    image: mongo:latest
    container_name: rna-seq-mongodb
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=secure_password
      - MONGO_INITDB_DATABASE=rna_seq_db
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    ports:
      - "27017:27017"
    restart: unless-stopped
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 2G

  redis:
    image: redis:alpine
    container_name: rna-seq-redis
    command: redis-server --requirepass secure_redis_password
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G

volumes:
  mongodb_data:
  mongodb_config:
  redis_data:

networks:
  default:
    name: rna-seq-network
    driver: bridge
